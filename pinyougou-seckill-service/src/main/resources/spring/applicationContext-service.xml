<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置服务提供者应用名称-->
    <dubbo:application name="pinyougou-content"></dubbo:application>
    <!--配置注册中心-->
    <dubbo:registry protocol="zookeeper" address="192.168.25.128" port="2181"></dubbo:registry>
    <!--配置服务调用的端口 默认端口为20880-->
    <dubbo:protocol name="dubbo" port="20889"></dubbo:protocol>
    <!--发布服务:注解的方式 扫描对应的包 @service 即可发布服务-->
    <dubbo:annotation package="com.pinyougou.seckill.service"></dubbo:annotation>
    <bean class="com.pinyougou.common.utils.IdWorker">
        <constructor-arg name="workerId" value="0"></constructor-arg>
        <constructor-arg name="datacenterId" value="0"></constructor-arg>
    </bean>
    <context:component-scan base-package="com.pinyougou.seckill.runnable"></context:component-scan>
    <!-- Spring线程池 -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5" />
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="25" />
        <!-- 允许的空闲时间 -->
        <property name="keepAliveSeconds" value="3000" />
        <!--
            线程池对拒绝任务(无线程可用)的处理策略 ThreadPoolExecutor.CallerRunsPolicy策略,调用者的线程会执行该任务,如果执行器已关闭,则丢弃.
        -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>
</beans>
